@{
    ViewData["Title"] = "Students";
}

<!-- ✅ Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

<style>
    :root {
        --maroon: #800000;
    }

    .bg-maroon {
        background-color: var(--maroon) !important;
    }

    .text-maroon {
        color: var(--maroon) !important;
    }

    .btn-maroon {
        background-color: var(--maroon);
        color: #fff;
    }

    .btn-maroon:hover {
        background-color: #660000;
        color: #fff;
    }
</style>
<nav class="navbar navbar-expand-lg navbar-dark bg-maroon">
    <div class="container-fluid">
        <a class="navbar-brand fw-bold" href="#">CollegeApp</a>
        <div class="collapse navbar-collapse">
            <ul class="navbar-nav ms-auto">
                <li class="nav-item"><a class="nav-link active" href="/Student/Index"><i class="bi bi-people"></i> Students</a></li>
                <li class="nav-item"><a class="nav-link" href="/Course/Index"><i class="bi bi-book"></i> Courses</a></li>
            </ul>
        </div>
    </div>
</nav>

<div class="container my-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-maroon"><i class="bi bi-people"></i> Student List</h2>
        <button id="addStudentBtn" class="btn btn-maroon">
            <i class="bi bi-person-plus"></i> Add Student
        </button>
    </div>

    <div class="card shadow-lg p-4">
        <div class="d-flex justify-content-between mb-3">
            <button id="loadBtn" class="btn btn-maroon">
                <i class="bi bi-arrow-clockwise"></i> Load Students
            </button>
        </div>

        <div id="students" class="table-responsive"></div>
    </div>
</div>

<!-- ✅ Modal -->
<div class="modal fade" id="studentModal" tabindex="-1" aria-labelledby="studentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-maroon text-white">
                <h5 class="modal-title" id="studentModalLabel">Add / Edit Student</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="studentForm">
                    <input type="hidden" id="studentId" />

                    <div class="mb-3">
                        <label for="rollNumber" class="form-label fw-semibold">Roll Number</label>
                        <input type="text" id="rollNumber" class="form-control" placeholder="Enter roll number" required />
                    </div>

                    <div class="mb-3">
                        <label for="name" class="form-label fw-semibold">Name</label>
                        <input type="text" id="name" class="form-control" placeholder="Enter name" required />
                    </div>

                    <div class="mb-3">
                        <label for="email" class="form-label fw-semibold">Email</label>
                        <input type="email" id="email" class="form-control" placeholder="Enter email" />
                    </div>

                    <div class="mb-3">
                        <label for="phone" class="form-label fw-semibold">Phone</label>
                        <input type="text" id="phone" class="form-control" placeholder="Enter phone" />
                    </div>

                    <div class="mb-3">
                        <label for="address" class="form-label fw-semibold">Address</label>
                        <input type="text" id="address" class="form-control" placeholder="Enter address" />
                    </div>

                    <div class="mb-3">
                        <label for="dateOfBirth" class="form-label fw-semibold">Date of Birth (YYYY-MM-DD)</label>
                        <input type="date" id="dateOfBirth" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="courseId" class="form-label fw-semibold">Course ID</label>
                        <input type="number" id="courseId" class="form-control" placeholder="Enter course ID" required />
                    </div>

                    <div class="mb-3">
                        <label for="gender" class="form-label fw-semibold">Gender</label>
                        <select id="gender" class="form-select">
                            <option value="">Select Gender</option>
                            <option>Male</option>
                            <option>Female</option>
                        </select>
                    </div>

                    <button type="submit" class="btn btn-maroon w-100">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- ✅ jQuery + Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    let studentsData = [];
    const apiBase = "https://localhost:7204/api/CollegeApp"; // ✅ Your API port
    const token = localStorage.getItem("jwtToken");

    function getHeaders() {
        return {
            "Content-Type": "application/json",
            "Authorization": "Bearer " + token
        };
    }

    // ✅ Load Students
    $("#loadBtn").click(function () {
        $.ajax({
            url: `${apiBase}/All`,
            type: "GET",
            headers: getHeaders(),
            success: function (data) {
                studentsData = data;
                renderTable(data);
            },
            error: function (xhr) {
                if (xhr.status === 401)
                    alert("⚠️ Unauthorized! Please login again.");
                else
                    alert("Error loading data: " + xhr.status + " - " + xhr.responseText);
            }
        });
    });

    // ✅ Render Table (Added Delete button)
    function renderTable(data) {
        let html = `
        <table class='table table-hover align-middle text-center'>
            <thead class='table-dark'>
                <tr>
                    <th>Roll Number</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>DOB</th>
                    <th>Course ID</th>
                    <th>Gender</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>`;

        data.forEach(s => {
            const dobFormatted = s.dateOfBirth ? new Date(s.dateOfBirth).toISOString().split("T")[0] : "";
            html += `
                <tr>
                    <td>${s.rollNumber}</td>
                    <td>${s.name}</td>
                    <td>${s.email}</td>
                    <td>${s.phone}</td>
                    <td>${dobFormatted}</td>
                    <td>${s.courseId || ''}</td>
                    <td>${s.gender || ''}</td>
                    <td>
                        <button class='btn btn-warning btn-sm me-2 editBtn' data-id='${s.studentId}'>
                            <i class='bi bi-pencil-square'></i> Edit
                        </button>
                        <button class='btn btn-danger btn-sm deleteBtn' data-id='${s.studentId}'>
                            <i class='bi bi-trash'></i> Delete
                        </button>
                    </td>
                </tr>`;
        });
        html += "</tbody></table>";
        $("#students").html(html);
    }

    // ✅ Add Button
    $("#addStudentBtn").click(function () {
        $("#studentForm")[0].reset();
        $("#studentId").val('');
        $("#studentModalLabel").text("Add Student");
        $("#studentModal").modal("show");
    });

    // ✅ Edit Button
    $(document).on("click", ".editBtn", function () {
        const id = $(this).data("id");
        const student = studentsData.find(s => s.studentId === id);
        if (student) {
            $("#studentId").val(student.studentId);
            $("#rollNumber").val(student.rollNumber);
            $("#name").val(student.name);
            $("#email").val(student.email);
            $("#phone").val(student.phone);
            $("#address").val(student.address);
            $("#dateOfBirth").val(student.dateOfBirth ? new Date(student.dateOfBirth).toISOString().split("T")[0] : '');
            $("#courseId").val(student.courseId);
            $("#gender").val(student.gender);
            $("#studentModalLabel").text("Edit Student");
            $("#studentModal").modal("show");
        }
    });

    // ✅ Delete Button
    $(document).on("click", ".deleteBtn", function () {
        const id = $(this).data("id");
        if (confirm("Are you sure you want to delete this student?")) {
            $.ajax({
                url: `${apiBase}/DeleteStudent/${id}`,
                type: "DELETE",
                headers: getHeaders(),
                success: function () {
                    alert("🗑️ Student deleted successfully!");
                    $("#loadBtn").click(); // reload
                },
                error: function (xhr) {
                    if (xhr.status === 401) {
                         alert("⚠️ Unauthorized! Please login again.");
                         return;
                     }
                 let msg = "⚠️ Unexpected error occurred while deleting student.";
                     try {
                          const res = JSON.parse(xhr.responseText);
                          msg = res.message || msg;
                         } catch (e) {
                            if (xhr.responseText)
                             msg = xhr.responseText;
                             }
                         alert(msg);
                            }

            });
        }
    });

    // ✅ Submit Add/Edit
    $("#studentForm").submit(function (e) {
        e.preventDefault();

        let rawDate = $("#dateOfBirth").val();
        let formattedDate = rawDate ? rawDate : null;

        const student = {
            studentId: $("#studentId").val() || 0,
            rollNumber: $("#rollNumber").val(),
            name: $("#name").val(),
            email: $("#email").val(),
            phone: $("#phone").val(),
            address: $("#address").val(),
            dateOfBirth: formattedDate,
            courseId: parseInt($("#courseId").val()),
            gender: $("#gender").val()
        };

        const isEdit = student.studentId > 0;
        const apiUrl = isEdit ? `${apiBase}/Update` : `${apiBase}/Add`;

        $.ajax({
            url: apiUrl,
            type: isEdit ? "PUT" : "POST",
            headers: getHeaders(),
            data: JSON.stringify(student),
            success: function () {
                alert("✅ Student saved successfully!");
                $("#studentModal").modal("hide");
                $("#loadBtn").click();
            },
                error: function (xhr) {
        if (xhr.status === 401) {
            alert("⚠️ Unauthorized! Please login again.");
            return;
        }

        let msg = "⚠️ Unexpected error occurred while saving student.";
        try {
            const res = JSON.parse(xhr.responseText);
            msg = res.message || msg;
        } catch (e) {
            if (xhr.responseText)
                msg = xhr.responseText;
        }
        alert(msg);
    }

        });
    });
</script>

